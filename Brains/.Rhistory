setwd("/group/statsoft/data/Brainweb/images/T1")
readVol <- function(fname, dim = c(181, 217, 181)) {
f<-gzfile(fname, open="rb")
on.exit(close(f))
b<-readBin(f,"integer",prod(dim),size = 1, signed = FALSE)
array(b, dim)
}
d <- readVol("t1_icbm_normal_1mm_pn3_rf20.rawb.gz")
head(d)
dim(d)
head(d[1])
head(d[1,])
head(d[,,1])
apply(d,1,sum)
apply(d,2,sum)
apply(d,3,sum)
?image
image(d)
image(d[1,2,])
image(d[1,,],d[,1,],d[,,1])
d[1,1,1]
d[1,1,]
d[1,,1]
image(z=d)
image(z=matrix(z[1,]))
image(z=matrix(d[1,]))
data.class(d[1,,])
head(d[1,,])
dim(d[1,,])
d[1,1,1]
require(grDevices) # for colours
x <- y <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
image(z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32))
image(z, axes = FALSE, main = "Math can be beautiful ...",
xlab = expression(cos(r^2) * e^{-r/6}))
contour(z, add = TRUE, drawlabels = FALSE)
x
y
r
z <- cos(r^2)*exp(-r/6
)
head(z)
dim(r)
dim(z)
image(z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32))
image(z = d[,,1])
image(z = d[,1,])
image(z = d[1,,])
image(z = d[10,,])
image(z = d[,,10])
image(z = d[,,100])
image(z = d[,,150])
image(z = d[,,100])
image(z = d[,100,])
image(z = d[,,100])
image(z = d[100,,])
t = apply(d,1:2,sum)
heaD(t)
head(t)
dim(t)
image(z =t)
t = apply(d,1:2,mean)
image(z =t)
t = apply(d,2:3,mean)
image(z =t)
t = apply(d,c(1,3),mean)
image(z =t)
image(z =d[100,,])
image(z =d[,,100])
image(z =d[,100,])
image(z =d[,100,100])
image(z =d[,,100])
image(z =d[,,1])
image(z =d[100,,])
image(z =d[,,100])
image(z =d[,100,])
image(z =d[100,,])
getwd()
setwd("~/STAT7400")
setwd("/mnt/nfs/netapp2/grad/zajichek/STAT7400/HW7")
brain <- readVol("/group/statsoft/data/Brainweb/images/T1/t1_icbm_normal_1mm_pn3_rf20.rawb.gz")
dim(brain)
list.files()
getwd()
?image
image(z = brain[100,,], xlab = "Y", xlab = "Z", main = "Index 100 in X direction")
image(z = brain[100,,], xlab = "Y", ylab = "Z", main = "Index 100 in X direction")
setwd("/mnt/nfs/netapp2/grad/zajichek/STAT7400/HW7")
getwd()
setwd("/Brains")
setwd("/mnt/nfs/netapp2/grad/zajichek/STAT7400/HW7/Brains")
image(z = brain[,100,], xlab = "X", ylab = "Z", main = "Index 100 in Y direction")
image(z = brain[,,100], xlab = "X", ylab = "Y", main = "Index 100 in Z direction")
image(z = brain[,100,], xlab = "X", ylab = "Z", main = "Index 100 in Y direction")
image(z = brain[,,100], xlab = "X", ylab = "Y", main = "Index 100 in Z direction")
mask <- readVol("/group/statsoft/data/Brainweb/images/mask.rawb.gz")
dim(mask)
unique(mask)
length(which(mask==1))
m = which(mask==1)
dim(m)
data.class(m)
head(m)
length(m)
m[1:50]
brain_only <- subset(brain, mask == 1)
dim(brain_only)
head(brain_only)
plot(density(brain_only))
library(ggplot2)
ggplot() + geom_density(aes(brain_only))
ggplot() + geom_density(aes(brain_only, fill = "black"))
ggplot() + geom_density(aes(brain_only, fill = "black")) + xlab("") + guides(fill=FALSE)
ggplot() + geom_density(aes(brain_only, fill = "black")) + xlab("Intensity") + guides(fill=FALSE) + ylab("Density") + ggtitle("Density estimate of brain scan intensities")
ggplot() + geom_density(aes(brain_only, fill = "black")) + xlab("Intensity") + ylab("Density") + ggtitle("Density estimate of brain scan intensities")
ggplot() + geom_density(aes(brain_only, fill = "black")) + xlab("Intensity") + ylab("Density") + guides(fill = F)
?density
?geom_density
ggplot() + geom_density(aes(brain_only, fill = "black")) + xlab("Intensity") + ylab("Density") + guides(fill = F)
ggplot() + geom_density(aes(brain_only, fill = "black")) + xlab("Intensity") + ylab("Density") + guides(fill = F) + annotate("text", "CSF",40,.01)
ggplot() + geom_density(aes(brain_only, fill = "black")) + xlab("Intensity") + ylab("Density") + guides(fill = F) + annotate("text", label = "CSF", x = 40, y = .01)
ggplot() + geom_density(aes(brain_only, fill = "black")) + xlab("Intensity") + ylab("Density") + guides(fill = F) + annotate("text", label = "CSF", x = 40, y = .009)
ggplot() + geom_density(aes(brain_only, fill = "black")) + xlab("Intensity") + ylab("Density") + guides(fill = F) + annotate("text", label = "CSF", x = 40, y = .009) + annotate("text", label = "Gray", x = 85, y = .015) + annotate("text", label = "White", x = 140, y = .0175)
ggplot() + geom_density(aes(brain_only, fill = "black")) + xlab("Intensity") + ylab("Density") + guides(fill = F) + annotate("text", label = "CSF", x = 40, y = .009) + annotate("text", label = "Gray", x = 85, y = .015) + annotate("text", label = "White", x = 135, y = .0175)
ggplot() + geom_density(aes(brain_only, fill = "black")) + xlab("Intensity") + ylab("Density") + guides(fill = F) + annotate("text", label = "CSF", x = 42, y = .009) + annotate("text", label = "Gray", x = 85, y = .015) + annotate("text", label = "White", x = 135, y = .0175)
ggplot() + geom_density(aes(brain_only, fill = "black")) + xlab("Intensity") + ylab("Density") + guides(fill = F) + annotate("text", label = "CSF", x = 41, y = .009) + annotate("text", label = "Gray", x = 85, y = .015) + annotate("text", label = "White", x = 135, y = .0175)
ls()
rm(list(d,m,r,t,x,y,z))
rm(d)
rm(m,r,t,x,y,z)
ls()
csf <- brain_only[brain_only<=70]
gray <- brain_only[brain_only>70 & brain_only<=115]
white <- brain_only[brain_only>115]
plot(density(csf))
plot(density(gray))
plot(density(white))
sd(csf)
sd(gray)
sd(white)
p1 <- length(csf)/length(brain_only)
p2 <- length(gray)/length(brain_only)
p3 <- length(white)/length(brain_only)
p1
p2
p3
theta <- list("mu" = c(mean(csf), mean(gray), mean(white)), "sigma" = c(sd(csf), sd(gray), sd(white)), "p" = c(p1, p2, p3))
theta
EMmix1 <- function(x, theta) {
mu <- theta$mu
sigma <- theta$sigma
p <- theta$p
M <- length(mu)
## E step
Ez <- outer(x, 1:M, function(x, i) p[i]
*
dnorm(x, mu[i], sigma[i]))
Ez <- sweep(Ez, 1, rowSums(Ez), "/")
colSums.Ez <- colSums(Ez)
## M step
xp <- sweep(Ez, 1, x, "
*
")
mu.new <- colSums(xp) / colSums.Ez
sqRes <- outer(x, mu.new, function(x, m) (x - m)ˆ2)
sigma.new <- sqrt(colSums(Ez
*
sqRes) / colSums.Ez)
p.new <- colSums.Ez / sum(colSums.Ez)
## pack up result
list(mu = mu.new, sigma = sigma.new, p = p.new)
}
EMmix1 <- function(x, theta) {
mu <- theta$mu
sigma <- theta$sigma
p <- theta$p
M <- length(mu)
## E step
Ez <- outer(x, 1:M, function(x, i) p[i]*dnorm(x, mu[i], sigma[i]))
Ez <- sweep(Ez, 1, rowSums(Ez), "/")
colSums.Ez <- colSums(Ez)
## M step
xp <- sweep(Ez, 1, x, "*")
mu.new <- colSums(xp) / colSums.Ez
sqRes <- outer(x, mu.new, function(x, m) (x - m)ˆ2)
sigma.new <- sqrt(colSums(Ez*sqRes) / colSums.Ez)
p.new <- colSums.Ez / sum(colSums.Ez)
## pack up result
list(mu = mu.new, sigma = sigma.new, p = p.new)
}
EMmix1 <- function(x, theta) {
mu <- theta$mu
sigma <- theta$sigma
p <- theta$p
M <- length(mu)
## E step
Ez <- outer(x, 1:M, function(x, i) p[i]*dnorm(x, mu[i], sigma[i]))
Ez <- sweep(Ez, 1, rowSums(Ez), "/")
colSums.Ez <- colSums(Ez)
## M step
xp <- sweep(Ez, 1, x, "*")
mu.new <- colSums(xp) / colSums.Ez
sqRes <- outer(x, mu.new, function(x, m) (x - m)ˆ2)
sigma.new <- sqrt(colSums(Ez*sqRes) / colSums.Ez)
p.new <- colSums.Ez / sum(colSums.Ez)
## pack up result
list(mu = mu.new, sigma = sigma.new, p = p.new)
}
EMmix1 <- function(x, theta) {
mu <- theta$mu
sigma <- theta$sigma
p <- theta$p
M <- length(mu)
Ez <- outer(x, 1:M, function(x, i) p[i]*dnorm(x, mu[i], sigma[i]))
Ez <- sweep(Ez, 1, rowSums(Ez), "/")
colSums.Ez <- colSums(Ez)
xp <- sweep(Ez, 1, x, "*")
mu.new <- colSums(xp) / colSums.Ez
sqRes <- outer(x, mu.new, function(x, m) (x - m)ˆ2)
EMmix1 <- function(x, theta) {
mu <- theta$mu
sigma <- theta$sigma
p <- theta$p
M <- length(mu)
Ez <- outer(x, 1:M, function(x, i) p[i]*dnorm(x, mu[i], sigma[i]))
Ez <- sweep(Ez, 1, rowSums(Ez), "/")
colSums.Ez <- colSums(Ez)
xp <- sweep(Ez, 1, x, "*")
mu.new <- colSums(xp)/colSums.Ez
sqRes <- outer(x, mu.new, function(x, m) (x - m)^2)
sigma.new <- sqrt(colSums(Ez*sqRes)/colSums.Ez)
p.new <- colSums.Ez/sum(colSums.Ez)
list(mu = mu.new, sigma = sigma.new, p = p.new)
}
EM <- EMmix1(brain_only, theta)
EM
theta
